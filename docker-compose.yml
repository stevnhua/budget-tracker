version: '3.8'

services:
  database:
    image: postgres:14-alpine
    container_name: budget_tracker_db
    restart: always
    environment:
      POSTGRES_DB: budget_tracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: budget_tracker_backend
    restart: always
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      FRONTEND_URL: http://localhost:3000
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: budget_tracker
      DB_USER: postgres
      DB_PASSWORD: postgres123
      JWT_SECRET: your_super_secret_jwt_key_min_32_chars_long_change_this
      JWT_REFRESH_SECRET: your_super_secret_refresh_key_min_32_chars_long_change_this
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend:
    build: ./frontend
    container_name: budget_tracker_frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true

volumes:
  postgres_data: